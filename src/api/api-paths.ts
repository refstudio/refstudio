/** You probably want to use the types from api-types.ts instead. */
/* eslint-disable */
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/sidecar/rewrite': {
    /** Http Rewrite */
    post: operations['http_rewrite_rewrite_post'];
  };
  '/api/sidecar/completion': {
    /** Http Completion */
    post: operations['http_completion_completion_post'];
  };
  '/api/sidecar/chat': {
    /** Http Chat */
    post: operations['http_chat_chat_post'];
  };
  '/api/sidecar/search': {
    /** Http Search */
    post: operations['http_search_search_post'];
  };
  '/api/references/{project_id}': {
    /**
     * List References
     * @description Returns a list of references for the current user
     */
    get: operations['list_references__project_id__get'];
    /**
     * Ingest References
     * @description Ingests references from PDFs in the project uploads directory
     */
    post: operations['ingest_references__project_id__post'];
  };
  '/api/references/{project_id}/{reference_id}': {
    /** Http Get */
    get: operations['http_get__project_id___reference_id__get'];
    /** Http Delete */
    delete: operations['http_delete__project_id___reference_id__delete'];
    /** Http Update */
    patch: operations['http_update__project_id___reference_id__patch'];
  };
  '/api/references/{project_id}/bulk_delete': {
    /** Http Bulk Delete */
    post: operations['http_bulk_delete__project_id__bulk_delete_post'];
  };
  '/api/ai/rewrite': {
    /** Http Ai Rewrite */
    post: operations['http_ai_rewrite_rewrite_post'];
  };
  '/api/ai/completion': {
    /** Http Ai Completion */
    post: operations['http_ai_completion_completion_post'];
  };
  '/api/ai/{project_id}/chat': {
    /** Http Ai Chat */
    post: operations['http_ai_chat__project_id__chat_post'];
  };
  '/api/search/s2': {
    /** Http Search S2 */
    post: operations['http_search_s2_s2_post'];
  };
  '/api/fs/{project_id}/{filepath}': {
    /** Read File */
    get: operations['read_file__project_id___filepath__get'];
    /** Create File */
    put: operations['create_file__project_id___filepath__put'];
    /** Delete File */
    delete: operations['delete_file__project_id___filepath__delete'];
    /** Head File */
    head: operations['head_file__project_id___filepath__head'];
  };
  '/api/projects/': {
    /**
     * List Projects
     * @description Returns a list of projects for the current user
     */
    get: operations['list_projects__get'];
    /**
     * Create Project
     * @description Creates a project directory in the filesystem
     *
     * Parameters
     * ----------
     * project_name : str
     *     The name of the project
     * project_path : str
     *     The path to the project directory. Only necessary for Desktop.
     *     For web, the project is stored in a private directory on the server.
     */
    post: operations['create_project__post'];
  };
  '/api/projects/{project_id}': {
    /**
     * Get Project
     * @description Returns the project path and a list of files in the project
     */
    get: operations['get_project__project_id__get'];
    /**
     * Delete Project
     * @description Deletes a project directory and all files in it
     */
    delete: operations['delete_project__project_id__delete'];
  };
  '/api/projects/{project_id}/files': {
    /** Get Project Files */
    get: operations['get_project_files__project_id__files_get'];
  };
  '/api/meta/status': {
    /** Status */
    get: operations['status_status_get'];
  };
  '/api/meta/shutdown': {
    /** Shutdown */
    post: operations['shutdown_shutdown_post'];
  };
  '/api/settings/': {
    /** Get Settings */
    get: operations['get_settings__get'];
    /** Update Settings */
    put: operations['update_settings__put'];
  };
}

export type webhooks = Record<string, never>;

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /** Http Rewrite */
  http_rewrite_rewrite_post: {
    requestBody: {
      content: {
        'application/json': components['schemas']['RewriteRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['RewriteResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Completion */
  http_completion_completion_post: {
    requestBody: {
      content: {
        'application/json': components['schemas']['TextCompletionRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['TextCompletionResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Chat */
  http_chat_chat_post: {
    requestBody: {
      content: {
        'application/json': components['schemas']['ChatRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['ChatResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Search */
  http_search_search_post: {
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['SearchResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /**
   * List References
   * @description Returns a list of references for the current user
   */
  list_references__project_id__get: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['Reference'][];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /**
   * Ingest References
   * @description Ingests references from PDFs in the project uploads directory
   */
  ingest_references__project_id__post: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Get */
  http_get__project_id___reference_id__get: {
    parameters: {
      path: {
        project_id: string;
        reference_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['Reference'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Delete */
  http_delete__project_id___reference_id__delete: {
    parameters: {
      path: {
        project_id: string;
        reference_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['DeleteStatusResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Update */
  http_update__project_id___reference_id__patch: {
    parameters: {
      path: {
        project_id: string;
        reference_id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ReferencePatch'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['UpdateStatusResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Bulk Delete */
  http_bulk_delete__project_id__bulk_delete_post: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['DeleteRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['DeleteStatusResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Ai Rewrite */
  http_ai_rewrite_rewrite_post: {
    requestBody: {
      content: {
        'application/json': components['schemas']['RewriteRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['RewriteResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Ai Completion */
  http_ai_completion_completion_post: {
    requestBody: {
      content: {
        'application/json': components['schemas']['TextCompletionRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['TextCompletionResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Ai Chat */
  http_ai_chat__project_id__chat_post: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ChatRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['ChatResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Http Search S2 */
  http_search_s2_s2_post: {
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['SearchResponse'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Read File */
  read_file__project_id___filepath__get: {
    parameters: {
      path: {
        project_id: string;
        filepath: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Create File */
  create_file__project_id___filepath__put: {
    parameters: {
      path: {
        project_id: string;
        filepath: string;
      };
    };
    requestBody: {
      content: {
        'multipart/form-data': components['schemas']['Body_create_file__project_id___filepath__put'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Delete File */
  delete_file__project_id___filepath__delete: {
    parameters: {
      path: {
        project_id: string;
        filepath: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Head File */
  head_file__project_id___filepath__head: {
    parameters: {
      path: {
        project_id: string;
        filepath: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /**
   * List Projects
   * @description Returns a list of projects for the current user
   */
  list_projects__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
    };
  };
  /**
   * Create Project
   * @description Creates a project directory in the filesystem
   *
   * Parameters
   * ----------
   * project_name : str
   *     The name of the project
   * project_path : str
   *     The path to the project directory. Only necessary for Desktop.
   *     For web, the project is stored in a private directory on the server.
   */
  create_project__post: {
    parameters: {
      query: {
        project_name: string;
        project_path?: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /**
   * Get Project
   * @description Returns the project path and a list of files in the project
   */
  get_project__project_id__get: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /**
   * Delete Project
   * @description Deletes a project directory and all files in it
   */
  delete_project__project_id__delete: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Get Project Files */
  get_project_files__project_id__files_get: {
    parameters: {
      path: {
        project_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  /** Status */
  status_status_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
    };
  };
  /** Shutdown */
  shutdown_shutdown_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': unknown;
        };
      };
    };
  };
  /** Get Settings */
  get_settings__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['SettingsSchema'];
        };
      };
    };
  };
  /** Update Settings */
  update_settings__put: {
    requestBody: {
      content: {
        'application/json': components['schemas']['SettingsSchema'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          'application/json': components['schemas']['SettingsSchema'];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
}
