# Thanks to this blog post: https://data-dive.com/multi-os-deployment-in-cloud-using-pyinstaller-and-github-actions/
name: Build

on:
  push:
    branches:
      - main
      - 334-error-bad-cpu-type-in-executable-os-error-86-when-trying-to-use-ai-selection-feature
  pull_request:
    # tags:
    #   - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # create-release:
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   outputs:
  #     release_id: ${{ steps.create-release.outputs.id }}
    
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #     - name: Create release
  #       id: create-release
  #       uses: actions/github-script@v6
  #       with:
  #         script: |
  #           const { data } = await github.rest.repos.createRelease({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             tag_name: context.ref,
  #             name: 'Release ' + context.ref,
  #             body: 'This is a test release to download and install Ref Studio',
  #             draft: true,
  #             prerelease: false
  #           })
  #           return data.id
    
  build-tauri:
    # needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - name: Linx-x86_64
          #   target: x86_64-unknown-linux-gnu
          #   runner: ubuntu-latest
          # - name: macOS-Apple
          #   target: aarch64-apple-darwin
          #   runner: macos-latest
          - name: macOS-Intel
            target: x86_64-apple-darwin
            runner: macos-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup JS
        uses: ./.github/actions/setup-node
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Setup Rust
        uses: ./.github/actions/setup-rust
      - name: Install dependencies (ubuntu only)
        if: matrix.runner == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: Create Python binary
        run: |
          poetry run pyinstaller --noconfirm --distpath src-tauri/bin/python python/main.py
          mv src-tauri/bin/python/main/main src-tauri/bin/python/main/main

      # start server in the background and verify it's working
      # the binary takes time to start up, so we need to wait a bit
      - name: Start Python binary and verify
        run: |
          ./src-tauri/bin/python/main/main serve &
          sleep 30
          curl -s http://0.0.0.0:1487/api/meta/status
      
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --verbose --target ${{ matrix.target }}
          includeDebug: true
          tagName: app-v__VERSION__${{ matrix.target }}
          releaseName: 'App v___VERSION__${{ matrix.target }}'
          releaseBody: 'This is a test release to download and install Ref Studio'
          releaseDraft: true
          prerelease: false
          # releaseId: ${{ needs.create-release.outputs.release_id }}
  
  # publish-release:
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   needs: [create-release, build-tauri]
  #   steps:
  #     - name: publish release
  #       id: publish-release
  #       uses: actions/github-script@v6
  #       env:
  #         release_id: ${{ needs.create-release.outputs.release_id }}
  #       with:
  #         script: |
  #           github.rest.repos.updateRelease({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             release_id: process.env.release_id,
  #             name: 'refstudio',
  #             draft: true,
  #             prerelease: false
  #           })